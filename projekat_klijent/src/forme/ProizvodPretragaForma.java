/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import controller.ClientController;
import domen.Proizvod;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import modeli.ModelTabeleDobavljaci;
import modeli.ModelTabeleProizvodi;
import sesijaa.Sesija;

/**
 *
 * @author Mina
 */
public class ProizvodPretragaForma extends javax.swing.JDialog {

    /**
     * Creates new form ProizvodPretragaForma
     */
    public ProizvodPretragaForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        setLocationRelativeTo(null);
        try {
            txtStringTekst.setText("");
            Sesija.getInstanca().setPretragap(this);
            pripremiFormu(new ArrayList<>());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", ERROR);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtStringTekst = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProizvodi = new javax.swing.JTable();
        btnIzmeni = new javax.swing.JButton();
        btnPonisti = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnPretrazi.setText("PRETRAŽI");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        tblProizvodi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProizvodi);

        btnIzmeni.setText("IZMENI");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnPonisti.setText("PONIŠTI");
        btnPonisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPonistiActionPerformed(evt);
            }
        });

        jLabel1.setText("Pretraži po nazivu proizvoda:");

        btnObrisi.setText("OBRIŠI");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPonisti)
                        .addGap(32, 32, 32)
                        .addComponent(btnObrisi)
                        .addGap(27, 27, 27)
                        .addComponent(btnIzmeni))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtStringTekst, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(163, 163, 163)
                            .addComponent(btnPretrazi))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStringTekst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretrazi)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni)
                    .addComponent(btnPonisti)
                    .addComponent(btnObrisi))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed

        try {
            int red = tblProizvodi.getSelectedRow();
            if (red == -1) {
                JOptionPane.showMessageDialog(rootPane, "Sistem ne može da prikaže podatke o proizvodu");
                return;
            }

            Proizvod pr = ((ModelTabeleProizvodi)tblProizvodi.getModel()).vratiProizvod(red);
             JOptionPane.showMessageDialog(rootPane,"Sistem je učitao proizvod");
            new ProizvodKreirajForma(null, true, pr).setVisible(true);

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        try {
            String tekst = txtStringTekst.getText();
            if (tekst.isEmpty()) {
                throw new Exception("Niste uneli kriterijum pretrage");
            }

            try {

                String kriterijum = txtStringTekst.getText();
                validacija(kriterijum);

                List<Proizvod> listaProizvoda = pretrazi(kriterijum);

                pripremiFormu(listaProizvoda);
                JOptionPane.showMessageDialog(this, "Sistem je pronašao proizvode prema zadatom kriterijumu");
                btnPonisti.setEnabled(true);
            } catch (Exception e) {

                JOptionPane.showMessageDialog(this, e.getMessage());
                e.printStackTrace();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Nije pronađen proizvod po zadatom kriterijumu");
        }

    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnPonistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPonistiActionPerformed
        // TODO add your handling code here:
        try {
            pripremiFormu(new ArrayList<>());
            txtStringTekst.setText("");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnPonistiActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        try {
            int red = tblProizvodi.getSelectedRow();
            if (red == -1) {
                JOptionPane.showMessageDialog(rootPane, "Niste izabrali proizvod");
                return;
            }
            
            Proizvod pr = ((ModelTabeleProizvodi)tblProizvodi.getModel()).vratiProizvod(red);
            JOptionPane.showMessageDialog(rootPane, "Sistem je pronašao proizvod");
            ClientController.getInstanca().obrisiProizvod(pr);
            
            JOptionPane.showMessageDialog(rootPane, "Uspešno ste obrisali proizvod");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
  

    private List<Proizvod> pretrazi(String kriterijum) throws Exception {
        List<Proizvod> proizvodi = ClientController.getInstanca().pretraziProizvode(kriterijum);
        if (proizvodi.isEmpty()) {
            throw new Exception("Ne postoje proizvodi koji zadovoljavaju zadati kriterijum!");
        }
        return proizvodi;
    }

    private void pripremiFormu(List<Proizvod> lista) throws Exception {

        try {
            if (lista.isEmpty()) {
                lista = ClientController.getInstanca().prikaziProizvode();
                btnPonisti.setEnabled(false);
            }
            ModelTabeleProizvodi model = new ModelTabeleProizvodi(lista);
            tblProizvodi.setModel(model);
            Sesija.getInstanca().dodajParametar("Lista proizvoda", model.getProizvodi());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    public void osvezi(Proizvod proizvod) {
        ModelTabeleProizvodi model = (ModelTabeleProizvodi) tblProizvodi.getModel();
        model.obrisiProizvod((Proizvod) Sesija.getInstanca().vratiParametar("Proizvod"));
        Sesija.getInstanca().obrisiParametar("Proizvod");
        if (proizvod != null) {
            Sesija.getInstanca().dodajParametar("Proizvod", proizvod);
            model.dodajProizvod(proizvod);
        }
    }

    private void validacija(String kriterijum) throws Exception {
        if (kriterijum.equals("")) {
            throw new Exception("Unesite uslov za pretragu!");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPonisti;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProizvodi;
    private javax.swing.JTextField txtStringTekst;
    // End of variables declaration//GEN-END:variables
}
